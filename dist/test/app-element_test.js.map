{"version":3,"file":"app-element_test.js","sourceRoot":"","sources":["../../src/test/app-element_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,OAAO,EAAE,UAAU,EAAE,MAAO,mBAAmB,CAAC;AAEhD,OAAO,EAAC,OAAO,EAAE,IAAI,EAAC,MAAM,kBAAkB,CAAC;AAE/C,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAE3B,KAAK,CAAC,aAAa,EAAE;IACnB,IAAI,CAAC,YAAY,EAAE;QACjB,IAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACjD,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,6BAA6B,EAAE;;;;wBACvB,qBAAM,OAAO,CAAC,IAAI,gGAAA,6BAA6B,KAAC,EAAA;;oBAArD,EAAE,GAAG,SAAgD;oBAC3D,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF,kHAID,CACA,CAAC;;;;SACH,CAAC,CAAC;IAEH,IAAI,CAAC,yBAAyB,EAAE;;;;wBACnB,qBAAM,OAAO,CAAC,IAAI,8GAAA,2CAAyC,KAAC,EAAA;;oBAAjE,EAAE,GAAG,SAA4D;oBACvE,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF,iHAID,CACA,CAAC;;;;SACH,CAAC,CAAC;IAEH,IAAI,CAAC,iBAAiB,EAAE;;;;wBACV,qBAAM,OAAO,CAAC,IAAI,gGAAA,6BAA6B,KAAC,EAAA;;oBAAtD,EAAE,GAAG,CAAC,SAAgD,CAAe;oBACrE,MAAM,GAAG,EAAE,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAE,CAAC;oBACvD,MAAM,CAAC,KAAK,EAAE,CAAC;oBACf,qBAAM,EAAE,CAAC,cAAc,EAAA;;oBAAvB,SAAuB,CAAC;oBACxB,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF,kHAID,CACA,CAAC;;;;SACH,CAAC,CAAC;IAEH,IAAI,CAAC,iBAAiB,EAAE;;;;wBACV,qBAAM,OAAO,CAAC,IAAI,gGAAA,6BAA6B,KAAC,EAAA;;oBAAtD,EAAE,GAAG,CAAC,SAAgD,CAAe;oBAC3E,qBAAM,EAAE,CAAC,cAAc,EAAA;;oBAAvB,SAAuB,CAAC;oBACxB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;;;;SACvD,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport { AppElement }  from '../app-element.js';\n\nimport {fixture, html} from '@open-wc/testing';\n\nconst assert = chai.assert;\n\nsuite('app-element', () => {\n  test('is defined', () => {\n    const el = document.createElement('app-element');\n    assert.instanceOf(el, AppElement);\n  });\n\n  test('renders with default values', async () => {\n    const el = await fixture(html`<app-element></app-element>`);\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, World!</h1>\n      <button part=\"button\">Click Count: 0</button>\n      <slot></slot>\n    `\n    );\n  });\n\n  test('renders with a set name', async () => {\n    const el = await fixture(html`<app-element name=\"Test\"></app-element>`);\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, Test!</h1>\n      <button part=\"button\">Click Count: 0</button>\n      <slot></slot>\n    `\n    );\n  });\n\n  test('handles a click', async () => {\n    const el = (await fixture(html`<app-element></app-element>`)) as AppElement;\n    const button = el.shadowRoot!.querySelector('button')!;\n    button.click();\n    await el.updateComplete;\n    assert.shadowDom.equal(\n      el,\n      `\n      <h1>Hello, World!</h1>\n      <button part=\"button\">Click Count: 1</button>\n      <slot></slot>\n    `\n    );\n  });\n\n  test('styling applied', async () => {\n    const el = (await fixture(html`<app-element></app-element>`)) as AppElement;\n    await el.updateComplete;\n    assert.equal(getComputedStyle(el).paddingTop, '16px');\n  });\n});\n"]}